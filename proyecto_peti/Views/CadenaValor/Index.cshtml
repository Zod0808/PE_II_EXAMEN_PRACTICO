@model List<proyecto_peti.Models.PreguntasCadenaValor>
@using proyecto_peti.Models
@{
    ViewBag.Title = "Cadena de Valor";
    var fortalezasDebilidades = ViewBag.FortalezasDebilidades as ObservacionesCadenaValor ?? new ObservacionesCadenaValor();
    double? potencialMejora = ViewBag.PotencialMejora;
}

<h2>Evaluación de la Cadena de Valor</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (Model == null || !Model.Any())
{
    <div class="alert alert-warning">
        No hay preguntas disponibles. Contacte al administrador.
    </div>
}
else
{
    using (Html.BeginForm("Index", "CadenaValor", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Pregunta</th>
                    <th>Valoración (1 a 5)</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Count; i++)
                {
                    <tr>
                        <td>@Model[i].PreguntaNumero</td>
                        <td>@Model[i].PreguntaTexto</td>
                        <td>
                            @Html.HiddenFor(m => m[i].Id)
                            @Html.HiddenFor(m => m[i].PlanId)
                            @Html.HiddenFor(m => m[i].PreguntaNumero)
                            @Html.HiddenFor(m => m[i].PreguntaTexto)
                            @Html.DropDownListFor(m => m[i].Valoracion,
                                new SelectList(
                                    new List<SelectListItem> {
                                        new SelectListItem{ Text = "1", Value="1"},
                                        new SelectListItem{ Text = "2", Value="2"},
                                        new SelectListItem{ Text = "3", Value="3"},
                                        new SelectListItem{ Text = "4", Value="4"},
                                        new SelectListItem{ Text = "5", Value="5"},
                                    }, "Value", "Text", Model[i].Valoracion),
                                "Seleccione", new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(m => m[i].Valoracion, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <h3>Observaciones - Fortalezas</h3>
        <div class="form-group">
            @Html.LabelFor(m => fortalezasDebilidades.Fortalezas1, "Fortaleza 1")
            @Html.TextBoxFor(m => fortalezasDebilidades.Fortalezas1, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => fortalezasDebilidades.Fortalezas1, "", new { @class = "text-danger" })
        </div>
        <!-- Repetir para Fortalezas2, Fortalezas3, Fortalezas4 -->

        <h3>Observaciones - Debilidades</h3>
        <div class="form-group">
            @Html.LabelFor(m => fortalezasDebilidades.Debilidades1, "Debilidad 1")
            @Html.TextBoxFor(m => fortalezasDebilidades.Debilidades1, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => fortalezasDebilidades.Debilidades1, "", new { @class = "text-danger" })
        </div>
        <!-- Repetir para Debilidades2, Debilidades3, Debilidades4 -->

        <button type="submit" class="btn btn-primary">Guardar</button>
    }
}